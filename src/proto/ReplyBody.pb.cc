// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ReplyBody.proto

#include "ReplyBody.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace com {
namespace chuzi {
namespace imsdk {
namespace server {
namespace model {
namespace proto {
PROTOBUF_CONSTEXPR ReplyBody_DataEntry_DoNotUse::ReplyBody_DataEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct ReplyBody_DataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplyBody_DataEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplyBody_DataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ReplyBody_DataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplyBody_DataEntry_DoNotUseDefaultTypeInternal _ReplyBody_DataEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR ReplyBody::ReplyBody(
    ::_pbi::ConstantInitialized)
  : data_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , key_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , code_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , message_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , timestamp_(int64_t{0}){}
struct ReplyBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplyBodyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplyBodyDefaultTypeInternal() {}
  union {
    ReplyBody _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplyBodyDefaultTypeInternal _ReplyBody_default_instance_;
}  // namespace proto
}  // namespace model
}  // namespace server
}  // namespace imsdk
}  // namespace chuzi
}  // namespace com
static ::_pb::Metadata file_level_metadata_ReplyBody_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_ReplyBody_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_ReplyBody_2eproto = nullptr;

const uint32_t TableStruct_ReplyBody_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::com::chuzi::imsdk::server::model::proto::ReplyBody_DataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::chuzi::imsdk::server::model::proto::ReplyBody_DataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::chuzi::imsdk::server::model::proto::ReplyBody_DataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::com::chuzi::imsdk::server::model::proto::ReplyBody_DataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::chuzi::imsdk::server::model::proto::ReplyBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::chuzi::imsdk::server::model::proto::ReplyBody, key_),
  PROTOBUF_FIELD_OFFSET(::com::chuzi::imsdk::server::model::proto::ReplyBody, code_),
  PROTOBUF_FIELD_OFFSET(::com::chuzi::imsdk::server::model::proto::ReplyBody, message_),
  PROTOBUF_FIELD_OFFSET(::com::chuzi::imsdk::server::model::proto::ReplyBody, timestamp_),
  PROTOBUF_FIELD_OFFSET(::com::chuzi::imsdk::server::model::proto::ReplyBody, data_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::com::chuzi::imsdk::server::model::proto::ReplyBody_DataEntry_DoNotUse)},
  { 10, -1, -1, sizeof(::com::chuzi::imsdk::server::model::proto::ReplyBody)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::com::chuzi::imsdk::server::model::proto::_ReplyBody_DataEntry_DoNotUse_default_instance_._instance,
  &::com::chuzi::imsdk::server::model::proto::_ReplyBody_default_instance_._instance,
};

const char descriptor_table_protodef_ReplyBody_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017ReplyBody.proto\022\"com.chuzi.imsdk.serve"
  "r.model.proto\"\276\001\n\tReplyBody\022\013\n\003key\030\001 \001(\t"
  "\022\014\n\004code\030\002 \001(\t\022\017\n\007message\030\003 \001(\t\022\021\n\ttimes"
  "tamp\030\004 \001(\003\022E\n\004data\030\005 \003(\01327.com.chuzi.ims"
  "dk.server.model.proto.ReplyBody.DataEntr"
  "y\032+\n\tDataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001"
  "(\t:\0028\001B\020B\016ReplyBodyProtob\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_ReplyBody_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ReplyBody_2eproto = {
    false, false, 272, descriptor_table_protodef_ReplyBody_2eproto,
    "ReplyBody.proto",
    &descriptor_table_ReplyBody_2eproto_once, nullptr, 0, 2,
    schemas, file_default_instances, TableStruct_ReplyBody_2eproto::offsets,
    file_level_metadata_ReplyBody_2eproto, file_level_enum_descriptors_ReplyBody_2eproto,
    file_level_service_descriptors_ReplyBody_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ReplyBody_2eproto_getter() {
  return &descriptor_table_ReplyBody_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ReplyBody_2eproto(&descriptor_table_ReplyBody_2eproto);
namespace com {
namespace chuzi {
namespace imsdk {
namespace server {
namespace model {
namespace proto {

// ===================================================================

ReplyBody_DataEntry_DoNotUse::ReplyBody_DataEntry_DoNotUse() {}
ReplyBody_DataEntry_DoNotUse::ReplyBody_DataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ReplyBody_DataEntry_DoNotUse::MergeFrom(const ReplyBody_DataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ReplyBody_DataEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ReplyBody_2eproto_getter, &descriptor_table_ReplyBody_2eproto_once,
      file_level_metadata_ReplyBody_2eproto[0]);
}

// ===================================================================

class ReplyBody::_Internal {
 public:
};

ReplyBody::ReplyBody(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  data_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &ReplyBody::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:com.chuzi.imsdk.server.model.proto.ReplyBody)
}
ReplyBody::ReplyBody(const ReplyBody& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.MergeFrom(from.data_);
  key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    key_.Set(from._internal_key(), 
      GetArenaForAllocation());
  }
  code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_code().empty()) {
    code_.Set(from._internal_code(), 
      GetArenaForAllocation());
  }
  message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    message_.Set(from._internal_message(), 
      GetArenaForAllocation());
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:com.chuzi.imsdk.server.model.proto.ReplyBody)
}

inline void ReplyBody::SharedCtor() {
key_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  key_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
code_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  code_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
message_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  message_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
timestamp_ = int64_t{0};
}

ReplyBody::~ReplyBody() {
  // @@protoc_insertion_point(destructor:com.chuzi.imsdk.server.model.proto.ReplyBody)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void ReplyBody::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  data_.Destruct();
  key_.Destroy();
  code_.Destroy();
  message_.Destroy();
}

void ReplyBody::ArenaDtor(void* object) {
  ReplyBody* _this = reinterpret_cast< ReplyBody* >(object);
  _this->data_.Destruct();
}
void ReplyBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReplyBody::Clear() {
// @@protoc_insertion_point(message_clear_start:com.chuzi.imsdk.server.model.proto.ReplyBody)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  key_.ClearToEmpty();
  code_.ClearToEmpty();
  message_.ClearToEmpty();
  timestamp_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReplyBody::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.chuzi.imsdk.server.model.proto.ReplyBody.key"));
        } else
          goto handle_unusual;
        continue;
      // string code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.chuzi.imsdk.server.model.proto.ReplyBody.code"));
        } else
          goto handle_unusual;
        continue;
      // string message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.chuzi.imsdk.server.model.proto.ReplyBody.message"));
        } else
          goto handle_unusual;
        continue;
      // int64 timestamp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> data = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&data_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReplyBody::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.chuzi.imsdk.server.model.proto.ReplyBody)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.chuzi.imsdk.server.model.proto.ReplyBody.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_code().data(), static_cast<int>(this->_internal_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.chuzi.imsdk.server.model.proto.ReplyBody.code");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_code(), target);
  }

  // string message = 3;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.chuzi.imsdk.server.model.proto.ReplyBody.message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_message(), target);
  }

  // int64 timestamp = 4;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_timestamp(), target);
  }

  // map<string, string> data = 5;
  if (!this->_internal_data().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = ReplyBody_DataEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_data();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "com.chuzi.imsdk.server.model.proto.ReplyBody.DataEntry.key");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.second.data(), static_cast<int>(entry.second.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "com.chuzi.imsdk.server.model.proto.ReplyBody.DataEntry.value");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(5, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(5, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.chuzi.imsdk.server.model.proto.ReplyBody)
  return target;
}

size_t ReplyBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.chuzi.imsdk.server.model.proto.ReplyBody)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> data = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_data_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_data().begin();
      it != this->_internal_data().end(); ++it) {
    total_size += ReplyBody_DataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_code());
  }

  // string message = 3;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // int64 timestamp = 4;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReplyBody::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ReplyBody::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReplyBody::GetClassData() const { return &_class_data_; }

void ReplyBody::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ReplyBody *>(to)->MergeFrom(
      static_cast<const ReplyBody &>(from));
}


void ReplyBody::MergeFrom(const ReplyBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.chuzi.imsdk.server.model.proto.ReplyBody)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  if (!from._internal_key().empty()) {
    _internal_set_key(from._internal_key());
  }
  if (!from._internal_code().empty()) {
    _internal_set_code(from._internal_code());
  }
  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  if (from._internal_timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReplyBody::CopyFrom(const ReplyBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.chuzi.imsdk.server.model.proto.ReplyBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplyBody::IsInitialized() const {
  return true;
}

void ReplyBody::InternalSwap(ReplyBody* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  data_.InternalSwap(&other->data_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &key_, lhs_arena,
      &other->key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &code_, lhs_arena,
      &other->code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &message_, lhs_arena,
      &other->message_, rhs_arena
  );
  swap(timestamp_, other->timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReplyBody::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ReplyBody_2eproto_getter, &descriptor_table_ReplyBody_2eproto_once,
      file_level_metadata_ReplyBody_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace model
}  // namespace server
}  // namespace imsdk
}  // namespace chuzi
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::chuzi::imsdk::server::model::proto::ReplyBody_DataEntry_DoNotUse*
Arena::CreateMaybeMessage< ::com::chuzi::imsdk::server::model::proto::ReplyBody_DataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::chuzi::imsdk::server::model::proto::ReplyBody_DataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::com::chuzi::imsdk::server::model::proto::ReplyBody*
Arena::CreateMaybeMessage< ::com::chuzi::imsdk::server::model::proto::ReplyBody >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::chuzi::imsdk::server::model::proto::ReplyBody >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
