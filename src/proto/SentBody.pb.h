// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SentBody.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_SentBody_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_SentBody_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_SentBody_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_SentBody_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_SentBody_2eproto;
namespace com {
namespace chuzi {
namespace imsdk {
namespace server {
namespace model {
namespace proto {
class SentBody;
struct SentBodyDefaultTypeInternal;
extern SentBodyDefaultTypeInternal _SentBody_default_instance_;
class SentBody_DataEntry_DoNotUse;
struct SentBody_DataEntry_DoNotUseDefaultTypeInternal;
extern SentBody_DataEntry_DoNotUseDefaultTypeInternal _SentBody_DataEntry_DoNotUse_default_instance_;
}  // namespace proto
}  // namespace model
}  // namespace server
}  // namespace imsdk
}  // namespace chuzi
}  // namespace com
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace com {
namespace chuzi {
namespace imsdk {
namespace server {
namespace model {
namespace proto {

// ===================================================================


// -------------------------------------------------------------------

class SentBody_DataEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<SentBody_DataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::google::protobuf::internal::MapEntry<SentBody_DataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> SuperType;
  SentBody_DataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SentBody_DataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit SentBody_DataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const SentBody_DataEntry_DoNotUse& other);
  static const SentBody_DataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SentBody_DataEntry_DoNotUse*>(&_SentBody_DataEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "com.chuzi.imsdk.server.model.proto.SentBody.DataEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "com.chuzi.imsdk.server.model.proto.SentBody.DataEntry.value");
 }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_SentBody_2eproto;
};
// -------------------------------------------------------------------

class SentBody final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.chuzi.imsdk.server.model.proto.SentBody) */ {
 public:
  inline SentBody() : SentBody(nullptr) {}
  ~SentBody() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SentBody(::google::protobuf::internal::ConstantInitialized);

  SentBody(const SentBody& from);
  SentBody(SentBody&& from) noexcept
    : SentBody() {
    *this = ::std::move(from);
  }

  inline SentBody& operator=(const SentBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline SentBody& operator=(SentBody&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SentBody& default_instance() {
    return *internal_default_instance();
  }
  static inline const SentBody* internal_default_instance() {
    return reinterpret_cast<const SentBody*>(
               &_SentBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SentBody& a, SentBody& b) {
    a.Swap(&b);
  }
  inline void Swap(SentBody* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SentBody* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SentBody* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SentBody>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SentBody& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SentBody& from) {
    SentBody::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SentBody* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "com.chuzi.imsdk.server.model.proto.SentBody";
  }
  protected:
  explicit SentBody(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 3,
    kKeyFieldNumber = 1,
    kTimestampFieldNumber = 2,
  };
  // map<string, string> data = 3;
  int data_size() const;
  private:
  int _internal_data_size() const;

  public:
  void clear_data() ;
  const ::google::protobuf::Map<std::string, std::string>& data() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_data();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_data() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_data();

  public:
  // string key = 1;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* ptr);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // int64 timestamp = 2;
  void clear_timestamp() ;
  ::int64_t timestamp() const;
  void set_timestamp(::int64_t value);

  private:
  ::int64_t _internal_timestamp() const;
  void _internal_set_timestamp(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:com.chuzi.imsdk.server.model.proto.SentBody)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 3, 1, 59, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::MapField<SentBody_DataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        data_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::int64_t timestamp_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SentBody_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SentBody

// string key = 1;
inline void SentBody::clear_key() {
  _impl_.key_.ClearToEmpty();
}
inline const std::string& SentBody::key() const {
  // @@protoc_insertion_point(field_get:com.chuzi.imsdk.server.model.proto.SentBody.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SentBody::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:com.chuzi.imsdk.server.model.proto.SentBody.key)
}
inline std::string* SentBody::mutable_key() {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:com.chuzi.imsdk.server.model.proto.SentBody.key)
  return _s;
}
inline const std::string& SentBody::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void SentBody::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(value, GetArenaForAllocation());
}
inline std::string* SentBody::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_.Mutable( GetArenaForAllocation());
}
inline std::string* SentBody::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:com.chuzi.imsdk.server.model.proto.SentBody.key)
  return _impl_.key_.Release();
}
inline void SentBody::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.chuzi.imsdk.server.model.proto.SentBody.key)
}

// int64 timestamp = 2;
inline void SentBody::clear_timestamp() {
  _impl_.timestamp_ = ::int64_t{0};
}
inline ::int64_t SentBody::timestamp() const {
  // @@protoc_insertion_point(field_get:com.chuzi.imsdk.server.model.proto.SentBody.timestamp)
  return _internal_timestamp();
}
inline void SentBody::set_timestamp(::int64_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:com.chuzi.imsdk.server.model.proto.SentBody.timestamp)
}
inline ::int64_t SentBody::_internal_timestamp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.timestamp_;
}
inline void SentBody::_internal_set_timestamp(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.timestamp_ = value;
}

// map<string, string> data = 3;
inline int SentBody::_internal_data_size() const {
  return _internal_data().size();
}
inline int SentBody::data_size() const {
  return _internal_data_size();
}
inline void SentBody::clear_data() {
  _impl_.data_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& SentBody::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& SentBody::data() const {
  // @@protoc_insertion_point(field_map:com.chuzi.imsdk.server.model.proto.SentBody.data)
  return _internal_data();
}
inline ::google::protobuf::Map<std::string, std::string>* SentBody::_internal_mutable_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.data_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* SentBody::mutable_data() {
  // @@protoc_insertion_point(field_mutable_map:com.chuzi.imsdk.server.model.proto.SentBody.data)
  return _internal_mutable_data();
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace model
}  // namespace server
}  // namespace imsdk
}  // namespace chuzi
}  // namespace com


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_SentBody_2eproto_2epb_2eh
